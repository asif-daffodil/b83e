/// <reference types="node" />
import { IncomingMessage as Req, ServerResponse as Res } from 'node:http';
export declare const setHeader: <Response_1 extends Res<Req> = Res<Req>>(res: Response_1) => (field: string | Record<string, string | number | string[]>, val?: string | number | readonly string[]) => Response_1;
export declare const setLocationHeader: <Request_1 extends Req = Req, Response_1 extends Res<Req> = Res<Req>>(req: Request_1, res: Response_1) => (url: string) => Response_1;
export declare const getResponseHeader: <Response_1 extends Res<Req> = Res<Req>>(res: Response_1) => (field: string) => string | number | string[];
export declare const setLinksHeader: <Response_1 extends Res<Req> = Res<Req>>(res: Response_1) => (links: {
    [key: string]: string;
}) => Response_1;
export declare const setVaryHeader: <Response_1 extends Res<Req> = Res<Req>>(res: Response_1) => (field: string) => Response_1;
export declare const setContentType: <Response_1 extends Res<Req> = Res<Req>>(res: Response_1) => (type: string) => Response_1;
//# sourceMappingURL=headers.d.ts.map